// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Event.proto

package com.bce.dts.protobuf;

public final class EventOuterClass {
  private EventOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bce.dts.protobuf.Event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    com.bce.dts.protobuf.Common.MsgType getType();

    /**
     * <pre>
     * 服务ID, RDS实例的IP:PORT
     * </pre>
     *
     * <code>string service_id = 2;</code>
     */
    java.lang.String getServiceId();
    /**
     * <pre>
     * 服务ID, RDS实例的IP:PORT
     * </pre>
     *
     * <code>string service_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getServiceIdBytes();

    /**
     * <pre>
     * 库名, 变更记录对应表所在的数据库的库名
     * </pre>
     *
     * <code>string db_name = 3;</code>
     */
    java.lang.String getDbName();
    /**
     * <pre>
     * 库名, 变更记录对应表所在的数据库的库名
     * </pre>
     *
     * <code>string db_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getDbNameBytes();

    /**
     * <pre>
     * 表名, 变更记录对应的表的表名
     * </pre>
     *
     * <code>string tbl_name = 4;</code>
     */
    java.lang.String getTblName();
    /**
     * <pre>
     * 表名, 变更记录对应的表的表名
     * </pre>
     *
     * <code>string tbl_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getTblNameBytes();

    /**
     * <pre>
     * 变更记录的类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
     */
    int getRecordTypeValue();
    /**
     * <pre>
     * 变更记录的类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
     */
    com.bce.dts.protobuf.EventOuterClass.Event.RecordType getRecordType();

    /**
     * <pre>
     * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
     * </pre>
     *
     * <code>string position = 6;</code>
     */
    java.lang.String getPosition();
    /**
     * <pre>
     * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
     * </pre>
     *
     * <code>string position = 6;</code>
     */
    com.google.protobuf.ByteString
        getPositionBytes();

    /**
     * <pre>
     * kafka中的offset
     * </pre>
     *
     * <code>string offset = 7;</code>
     */
    java.lang.String getOffset();
    /**
     * <pre>
     * kafka中的offset
     * </pre>
     *
     * <code>string offset = 7;</code>
     */
    com.google.protobuf.ByteString
        getOffsetBytes();

    /**
     * <pre>
     * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 8;</code>
     */
    java.lang.String getTimestamp();
    /**
     * <pre>
     * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 8;</code>
     */
    com.google.protobuf.ByteString
        getTimestampBytes();

    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    java.util.List<com.bce.dts.protobuf.FieldOuterClass.Field> 
        getFieldsList();
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    com.bce.dts.protobuf.FieldOuterClass.Field getFields(int index);
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    int getFieldsCount();
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    java.util.List<? extends com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <pre>
     * ddl语句，如果是DML Event，为空串
     * </pre>
     *
     * <code>string ddl = 10;</code>
     */
    java.lang.String getDdl();
    /**
     * <pre>
     * ddl语句，如果是DML Event，为空串
     * </pre>
     *
     * <code>string ddl = 10;</code>
     */
    com.google.protobuf.ByteString
        getDdlBytes();

    /**
     * <pre>
     * dts任务ID
     * </pre>
     *
     * <code>string dts_id = 11;</code>
     */
    java.lang.String getDtsId();
    /**
     * <pre>
     * dts任务ID
     * </pre>
     *
     * <code>string dts_id = 11;</code>
     */
    com.google.protobuf.ByteString
        getDtsIdBytes();

    /**
     * <pre>
     * 是否是End记录
     * </pre>
     *
     * <code>bool is_end = 12;</code>
     */
    boolean getIsEnd();
  }
  /**
   * Protobuf type {@code com.bce.dts.protobuf.Event}
   */
  public  static final class Event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bce.dts.protobuf.Event)
      EventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Event.newBuilder() to construct.
    private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Event() {
      type_ = 0;
      serviceId_ = "";
      dbName_ = "";
      tblName_ = "";
      recordType_ = 0;
      position_ = "";
      offset_ = "";
      timestamp_ = "";
      fields_ = java.util.Collections.emptyList();
      ddl_ = "";
      dtsId_ = "";
      isEnd_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              serviceId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              dbName_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              tblName_ = s;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              recordType_ = rawValue;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              position_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              offset_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              timestamp_ = s;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                fields_ = new java.util.ArrayList<com.bce.dts.protobuf.FieldOuterClass.Field>();
                mutable_bitField0_ |= 0x00000100;
              }
              fields_.add(
                  input.readMessage(com.bce.dts.protobuf.FieldOuterClass.Field.parser(), extensionRegistry));
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              ddl_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              dtsId_ = s;
              break;
            }
            case 96: {

              isEnd_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bce.dts.protobuf.EventOuterClass.internal_static_baidu_river_Event_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bce.dts.protobuf.EventOuterClass.internal_static_baidu_river_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bce.dts.protobuf.EventOuterClass.Event.class, com.bce.dts.protobuf.EventOuterClass.Event.Builder.class);
    }

    /**
     * Protobuf enum {@code com.bce.dts.protobuf.Event.RecordType}
     */
    public enum RecordType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INSERT = 0;</code>
       */
      INSERT(0),
      /**
       * <code>DELETE = 1;</code>
       */
      DELETE(1),
      /**
       * <code>UPDATE = 2;</code>
       */
      UPDATE(2),
      /**
       * <code>BEGIN = 3;</code>
       */
      BEGIN(3),
      /**
       * <code>COMMIT = 4;</code>
       */
      COMMIT(4),
      /**
       * <code>DDL = 5;</code>
       */
      DDL(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>INSERT = 0;</code>
       */
      public static final int INSERT_VALUE = 0;
      /**
       * <code>DELETE = 1;</code>
       */
      public static final int DELETE_VALUE = 1;
      /**
       * <code>UPDATE = 2;</code>
       */
      public static final int UPDATE_VALUE = 2;
      /**
       * <code>BEGIN = 3;</code>
       */
      public static final int BEGIN_VALUE = 3;
      /**
       * <code>COMMIT = 4;</code>
       */
      public static final int COMMIT_VALUE = 4;
      /**
       * <code>DDL = 5;</code>
       */
      public static final int DDL_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RecordType valueOf(int value) {
        return forNumber(value);
      }

      public static RecordType forNumber(int value) {
        switch (value) {
          case 0: return INSERT;
          case 1: return DELETE;
          case 2: return UPDATE;
          case 3: return BEGIN;
          case 4: return COMMIT;
          case 5: return DDL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RecordType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RecordType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RecordType>() {
              public RecordType findValueByNumber(int number) {
                return RecordType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.bce.dts.protobuf.EventOuterClass.Event.getDescriptor().getEnumTypes().get(0);
      }

      private static final RecordType[] VALUES = values();

      public static RecordType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RecordType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.bce.dts.protobuf.Event.RecordType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    public com.bce.dts.protobuf.Common.MsgType getType() {
      com.bce.dts.protobuf.Common.MsgType result = com.bce.dts.protobuf.Common.MsgType.valueOf(type_);
      return result == null ? com.bce.dts.protobuf.Common.MsgType.UNRECOGNIZED : result;
    }

    public static final int SERVICE_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object serviceId_;
    /**
     * <pre>
     * 服务ID, RDS实例的IP:PORT
     * </pre>
     *
     * <code>string service_id = 2;</code>
     */
    public java.lang.String getServiceId() {
      java.lang.Object ref = serviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 服务ID, RDS实例的IP:PORT
     * </pre>
     *
     * <code>string service_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getServiceIdBytes() {
      java.lang.Object ref = serviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DB_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object dbName_;
    /**
     * <pre>
     * 库名, 变更记录对应表所在的数据库的库名
     * </pre>
     *
     * <code>string db_name = 3;</code>
     */
    public java.lang.String getDbName() {
      java.lang.Object ref = dbName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dbName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 库名, 变更记录对应表所在的数据库的库名
     * </pre>
     *
     * <code>string db_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDbNameBytes() {
      java.lang.Object ref = dbName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dbName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TBL_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object tblName_;
    /**
     * <pre>
     * 表名, 变更记录对应的表的表名
     * </pre>
     *
     * <code>string tbl_name = 4;</code>
     */
    public java.lang.String getTblName() {
      java.lang.Object ref = tblName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tblName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 表名, 变更记录对应的表的表名
     * </pre>
     *
     * <code>string tbl_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTblNameBytes() {
      java.lang.Object ref = tblName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tblName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECORDTYPE_FIELD_NUMBER = 5;
    private int recordType_;
    /**
     * <pre>
     * 变更记录的类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
     */
    public int getRecordTypeValue() {
      return recordType_;
    }
    /**
     * <pre>
     * 变更记录的类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
     */
    public com.bce.dts.protobuf.EventOuterClass.Event.RecordType getRecordType() {
      com.bce.dts.protobuf.EventOuterClass.Event.RecordType result = com.bce.dts.protobuf.EventOuterClass.Event.RecordType.valueOf(recordType_);
      return result == null ? com.bce.dts.protobuf.EventOuterClass.Event.RecordType.UNRECOGNIZED : result;
    }

    public static final int POSITION_FIELD_NUMBER = 6;
    private volatile java.lang.Object position_;
    /**
     * <pre>
     * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
     * </pre>
     *
     * <code>string position = 6;</code>
     */
    public java.lang.String getPosition() {
      java.lang.Object ref = position_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        position_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
     * </pre>
     *
     * <code>string position = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPositionBytes() {
      java.lang.Object ref = position_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        position_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 7;
    private volatile java.lang.Object offset_;
    /**
     * <pre>
     * kafka中的offset
     * </pre>
     *
     * <code>string offset = 7;</code>
     */
    public java.lang.String getOffset() {
      java.lang.Object ref = offset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        offset_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * kafka中的offset
     * </pre>
     *
     * <code>string offset = 7;</code>
     */
    public com.google.protobuf.ByteString
        getOffsetBytes() {
      java.lang.Object ref = offset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        offset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 8;
    private volatile java.lang.Object timestamp_;
    /**
     * <pre>
     * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 8;</code>
     */
    public java.lang.String getTimestamp() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timestamp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 8;</code>
     */
    public com.google.protobuf.ByteString
        getTimestampBytes() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 9;
    private java.util.List<com.bce.dts.protobuf.FieldOuterClass.Field> fields_;
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    public java.util.List<com.bce.dts.protobuf.FieldOuterClass.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    public java.util.List<? extends com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    public com.bce.dts.protobuf.FieldOuterClass.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <pre>
     *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
     * </pre>
     *
     * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
     */
    public com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int DDL_FIELD_NUMBER = 10;
    private volatile java.lang.Object ddl_;
    /**
     * <pre>
     * ddl语句，如果是DML Event，为空串
     * </pre>
     *
     * <code>string ddl = 10;</code>
     */
    public java.lang.String getDdl() {
      java.lang.Object ref = ddl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ddl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ddl语句，如果是DML Event，为空串
     * </pre>
     *
     * <code>string ddl = 10;</code>
     */
    public com.google.protobuf.ByteString
        getDdlBytes() {
      java.lang.Object ref = ddl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ddl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DTS_ID_FIELD_NUMBER = 11;
    private volatile java.lang.Object dtsId_;
    /**
     * <pre>
     * dts任务ID
     * </pre>
     *
     * <code>string dts_id = 11;</code>
     */
    public java.lang.String getDtsId() {
      java.lang.Object ref = dtsId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dtsId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * dts任务ID
     * </pre>
     *
     * <code>string dts_id = 11;</code>
     */
    public com.google.protobuf.ByteString
        getDtsIdBytes() {
      java.lang.Object ref = dtsId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dtsId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_END_FIELD_NUMBER = 12;
    private boolean isEnd_;
    /**
     * <pre>
     * 是否是End记录
     * </pre>
     *
     * <code>bool is_end = 12;</code>
     */
    public boolean getIsEnd() {
      return isEnd_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.bce.dts.protobuf.Common.MsgType.UNKNOW.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!getServiceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serviceId_);
      }
      if (!getDbNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dbName_);
      }
      if (!getTblNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, tblName_);
      }
      if (recordType_ != com.bce.dts.protobuf.EventOuterClass.Event.RecordType.INSERT.getNumber()) {
        output.writeEnum(5, recordType_);
      }
      if (!getPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, position_);
      }
      if (!getOffsetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, offset_);
      }
      if (!getTimestampBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, timestamp_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(9, fields_.get(i));
      }
      if (!getDdlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, ddl_);
      }
      if (!getDtsIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, dtsId_);
      }
      if (isEnd_ != false) {
        output.writeBool(12, isEnd_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.bce.dts.protobuf.Common.MsgType.UNKNOW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!getServiceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serviceId_);
      }
      if (!getDbNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dbName_);
      }
      if (!getTblNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, tblName_);
      }
      if (recordType_ != com.bce.dts.protobuf.EventOuterClass.Event.RecordType.INSERT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, recordType_);
      }
      if (!getPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, position_);
      }
      if (!getOffsetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, offset_);
      }
      if (!getTimestampBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, timestamp_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, fields_.get(i));
      }
      if (!getDdlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, ddl_);
      }
      if (!getDtsIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, dtsId_);
      }
      if (isEnd_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isEnd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bce.dts.protobuf.EventOuterClass.Event)) {
        return super.equals(obj);
      }
      com.bce.dts.protobuf.EventOuterClass.Event other = (com.bce.dts.protobuf.EventOuterClass.Event) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && getServiceId()
          .equals(other.getServiceId());
      result = result && getDbName()
          .equals(other.getDbName());
      result = result && getTblName()
          .equals(other.getTblName());
      result = result && recordType_ == other.recordType_;
      result = result && getPosition()
          .equals(other.getPosition());
      result = result && getOffset()
          .equals(other.getOffset());
      result = result && getTimestamp()
          .equals(other.getTimestamp());
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && getDdl()
          .equals(other.getDdl());
      result = result && getDtsId()
          .equals(other.getDtsId());
      result = result && (getIsEnd()
          == other.getIsEnd());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SERVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getServiceId().hashCode();
      hash = (37 * hash) + DB_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDbName().hashCode();
      hash = (37 * hash) + TBL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTblName().hashCode();
      hash = (37 * hash) + RECORDTYPE_FIELD_NUMBER;
      hash = (53 * hash) + recordType_;
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition().hashCode();
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getOffset().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (37 * hash) + DDL_FIELD_NUMBER;
      hash = (53 * hash) + getDdl().hashCode();
      hash = (37 * hash) + DTS_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDtsId().hashCode();
      hash = (37 * hash) + IS_END_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsEnd());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bce.dts.protobuf.EventOuterClass.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bce.dts.protobuf.EventOuterClass.Event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bce.dts.protobuf.Event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bce.dts.protobuf.Event)
        com.bce.dts.protobuf.EventOuterClass.EventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bce.dts.protobuf.EventOuterClass.internal_static_baidu_river_Event_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bce.dts.protobuf.EventOuterClass.internal_static_baidu_river_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bce.dts.protobuf.EventOuterClass.Event.class, com.bce.dts.protobuf.EventOuterClass.Event.Builder.class);
      }

      // Construct using com.bce.dts.protobuf.EventOuterClass.Event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        serviceId_ = "";

        dbName_ = "";

        tblName_ = "";

        recordType_ = 0;

        position_ = "";

        offset_ = "";

        timestamp_ = "";

        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          fieldsBuilder_.clear();
        }
        ddl_ = "";

        dtsId_ = "";

        isEnd_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bce.dts.protobuf.EventOuterClass.internal_static_baidu_river_Event_descriptor;
      }

      public com.bce.dts.protobuf.EventOuterClass.Event getDefaultInstanceForType() {
        return com.bce.dts.protobuf.EventOuterClass.Event.getDefaultInstance();
      }

      public com.bce.dts.protobuf.EventOuterClass.Event build() {
        com.bce.dts.protobuf.EventOuterClass.Event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.bce.dts.protobuf.EventOuterClass.Event buildPartial() {
        com.bce.dts.protobuf.EventOuterClass.Event result = new com.bce.dts.protobuf.EventOuterClass.Event(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        result.serviceId_ = serviceId_;
        result.dbName_ = dbName_;
        result.tblName_ = tblName_;
        result.recordType_ = recordType_;
        result.position_ = position_;
        result.offset_ = offset_;
        result.timestamp_ = timestamp_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.ddl_ = ddl_;
        result.dtsId_ = dtsId_;
        result.isEnd_ = isEnd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bce.dts.protobuf.EventOuterClass.Event) {
          return mergeFrom((com.bce.dts.protobuf.EventOuterClass.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bce.dts.protobuf.EventOuterClass.Event other) {
        if (other == com.bce.dts.protobuf.EventOuterClass.Event.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getServiceId().isEmpty()) {
          serviceId_ = other.serviceId_;
          onChanged();
        }
        if (!other.getDbName().isEmpty()) {
          dbName_ = other.dbName_;
          onChanged();
        }
        if (!other.getTblName().isEmpty()) {
          tblName_ = other.tblName_;
          onChanged();
        }
        if (other.recordType_ != 0) {
          setRecordTypeValue(other.getRecordTypeValue());
        }
        if (!other.getPosition().isEmpty()) {
          position_ = other.position_;
          onChanged();
        }
        if (!other.getOffset().isEmpty()) {
          offset_ = other.offset_;
          onChanged();
        }
        if (!other.getTimestamp().isEmpty()) {
          timestamp_ = other.timestamp_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000100);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (!other.getDdl().isEmpty()) {
          ddl_ = other.ddl_;
          onChanged();
        }
        if (!other.getDtsId().isEmpty()) {
          dtsId_ = other.dtsId_;
          onChanged();
        }
        if (other.getIsEnd() != false) {
          setIsEnd(other.getIsEnd());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bce.dts.protobuf.EventOuterClass.Event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bce.dts.protobuf.EventOuterClass.Event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public com.bce.dts.protobuf.Common.MsgType getType() {
        com.bce.dts.protobuf.Common.MsgType result = com.bce.dts.protobuf.Common.MsgType.valueOf(type_);
        return result == null ? com.bce.dts.protobuf.Common.MsgType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public Builder setType(com.bce.dts.protobuf.Common.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object serviceId_ = "";
      /**
       * <pre>
       * 服务ID, RDS实例的IP:PORT
       * </pre>
       *
       * <code>string service_id = 2;</code>
       */
      public java.lang.String getServiceId() {
        java.lang.Object ref = serviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 服务ID, RDS实例的IP:PORT
       * </pre>
       *
       * <code>string service_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getServiceIdBytes() {
        java.lang.Object ref = serviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 服务ID, RDS实例的IP:PORT
       * </pre>
       *
       * <code>string service_id = 2;</code>
       */
      public Builder setServiceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 服务ID, RDS实例的IP:PORT
       * </pre>
       *
       * <code>string service_id = 2;</code>
       */
      public Builder clearServiceId() {
        
        serviceId_ = getDefaultInstance().getServiceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 服务ID, RDS实例的IP:PORT
       * </pre>
       *
       * <code>string service_id = 2;</code>
       */
      public Builder setServiceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dbName_ = "";
      /**
       * <pre>
       * 库名, 变更记录对应表所在的数据库的库名
       * </pre>
       *
       * <code>string db_name = 3;</code>
       */
      public java.lang.String getDbName() {
        java.lang.Object ref = dbName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dbName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 库名, 变更记录对应表所在的数据库的库名
       * </pre>
       *
       * <code>string db_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDbNameBytes() {
        java.lang.Object ref = dbName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dbName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 库名, 变更记录对应表所在的数据库的库名
       * </pre>
       *
       * <code>string db_name = 3;</code>
       */
      public Builder setDbName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dbName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 库名, 变更记录对应表所在的数据库的库名
       * </pre>
       *
       * <code>string db_name = 3;</code>
       */
      public Builder clearDbName() {
        
        dbName_ = getDefaultInstance().getDbName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 库名, 变更记录对应表所在的数据库的库名
       * </pre>
       *
       * <code>string db_name = 3;</code>
       */
      public Builder setDbNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dbName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tblName_ = "";
      /**
       * <pre>
       * 表名, 变更记录对应的表的表名
       * </pre>
       *
       * <code>string tbl_name = 4;</code>
       */
      public java.lang.String getTblName() {
        java.lang.Object ref = tblName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tblName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 表名, 变更记录对应的表的表名
       * </pre>
       *
       * <code>string tbl_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTblNameBytes() {
        java.lang.Object ref = tblName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tblName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 表名, 变更记录对应的表的表名
       * </pre>
       *
       * <code>string tbl_name = 4;</code>
       */
      public Builder setTblName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tblName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 表名, 变更记录对应的表的表名
       * </pre>
       *
       * <code>string tbl_name = 4;</code>
       */
      public Builder clearTblName() {
        
        tblName_ = getDefaultInstance().getTblName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 表名, 变更记录对应的表的表名
       * </pre>
       *
       * <code>string tbl_name = 4;</code>
       */
      public Builder setTblNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tblName_ = value;
        onChanged();
        return this;
      }

      private int recordType_ = 0;
      /**
       * <pre>
       * 变更记录的类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
       */
      public int getRecordTypeValue() {
        return recordType_;
      }
      /**
       * <pre>
       * 变更记录的类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
       */
      public Builder setRecordTypeValue(int value) {
        recordType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 变更记录的类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
       */
      public com.bce.dts.protobuf.EventOuterClass.Event.RecordType getRecordType() {
        com.bce.dts.protobuf.EventOuterClass.Event.RecordType result = com.bce.dts.protobuf.EventOuterClass.Event.RecordType.valueOf(recordType_);
        return result == null ? com.bce.dts.protobuf.EventOuterClass.Event.RecordType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 变更记录的类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
       */
      public Builder setRecordType(com.bce.dts.protobuf.EventOuterClass.Event.RecordType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        recordType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 变更记录的类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Event.RecordType recordType = 5;</code>
       */
      public Builder clearRecordType() {
        
        recordType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object position_ = "";
      /**
       * <pre>
       * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
       * </pre>
       *
       * <code>string position = 6;</code>
       */
      public java.lang.String getPosition() {
        java.lang.Object ref = position_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          position_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
       * </pre>
       *
       * <code>string position = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPositionBytes() {
        java.lang.Object ref = position_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          position_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
       * </pre>
       *
       * <code>string position = 6;</code>
       */
      public Builder setPosition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
       * </pre>
       *
       * <code>string position = 6;</code>
       */
      public Builder clearPosition() {
        
        position_ = getDefaultInstance().getPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 变更记录在binlog中的position，格式为binlog_file_name:binlog_file_offset或gtid格式
       * </pre>
       *
       * <code>string position = 6;</code>
       */
      public Builder setPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        position_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object offset_ = "";
      /**
       * <pre>
       * kafka中的offset
       * </pre>
       *
       * <code>string offset = 7;</code>
       */
      public java.lang.String getOffset() {
        java.lang.Object ref = offset_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          offset_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * kafka中的offset
       * </pre>
       *
       * <code>string offset = 7;</code>
       */
      public com.google.protobuf.ByteString
          getOffsetBytes() {
        java.lang.Object ref = offset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          offset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * kafka中的offset
       * </pre>
       *
       * <code>string offset = 7;</code>
       */
      public Builder setOffset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kafka中的offset
       * </pre>
       *
       * <code>string offset = 7;</code>
       */
      public Builder clearOffset() {
        
        offset_ = getDefaultInstance().getOffset();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kafka中的offset
       * </pre>
       *
       * <code>string offset = 7;</code>
       */
      public Builder setOffsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        offset_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object timestamp_ = "";
      /**
       * <pre>
       * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 8;</code>
       */
      public java.lang.String getTimestamp() {
        java.lang.Object ref = timestamp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timestamp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 8;</code>
       */
      public com.google.protobuf.ByteString
          getTimestampBytes() {
        java.lang.Object ref = timestamp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timestamp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 8;</code>
       */
      public Builder setTimestamp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 8;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = getDefaultInstance().getTimestamp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 变更记录写入到binlog文件中时的时间戳, 格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 8;</code>
       */
      public Builder setTimestampBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timestamp_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.bce.dts.protobuf.FieldOuterClass.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fields_ = new java.util.ArrayList<com.bce.dts.protobuf.FieldOuterClass.Field>(fields_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bce.dts.protobuf.FieldOuterClass.Field, com.bce.dts.protobuf.FieldOuterClass.Field.Builder, com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder> fieldsBuilder_;

      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public java.util.List<com.bce.dts.protobuf.FieldOuterClass.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public com.bce.dts.protobuf.FieldOuterClass.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder setFields(
          int index, com.bce.dts.protobuf.FieldOuterClass.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder setFields(
          int index, com.bce.dts.protobuf.FieldOuterClass.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder addFields(com.bce.dts.protobuf.FieldOuterClass.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder addFields(
          int index, com.bce.dts.protobuf.FieldOuterClass.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder addFields(
          com.bce.dts.protobuf.FieldOuterClass.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder addFields(
          int index, com.bce.dts.protobuf.FieldOuterClass.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends com.bce.dts.protobuf.FieldOuterClass.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public com.bce.dts.protobuf.FieldOuterClass.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public java.util.List<? extends com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public com.bce.dts.protobuf.FieldOuterClass.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            com.bce.dts.protobuf.FieldOuterClass.Field.getDefaultInstance());
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public com.bce.dts.protobuf.FieldOuterClass.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, com.bce.dts.protobuf.FieldOuterClass.Field.getDefaultInstance());
      }
      /**
       * <pre>
       *    repeated com.bce.dts.protobuf.Field fields = 9;  // 变更记录的所有字段，如果为DDL Event，为null
       * </pre>
       *
       * <code>repeated .com.bce.dts.protobuf.Field fields = 9;</code>
       */
      public java.util.List<com.bce.dts.protobuf.FieldOuterClass.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bce.dts.protobuf.FieldOuterClass.Field, com.bce.dts.protobuf.FieldOuterClass.Field.Builder, com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.bce.dts.protobuf.FieldOuterClass.Field, com.bce.dts.protobuf.FieldOuterClass.Field.Builder, com.bce.dts.protobuf.FieldOuterClass.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private java.lang.Object ddl_ = "";
      /**
       * <pre>
       * ddl语句，如果是DML Event，为空串
       * </pre>
       *
       * <code>string ddl = 10;</code>
       */
      public java.lang.String getDdl() {
        java.lang.Object ref = ddl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ddl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ddl语句，如果是DML Event，为空串
       * </pre>
       *
       * <code>string ddl = 10;</code>
       */
      public com.google.protobuf.ByteString
          getDdlBytes() {
        java.lang.Object ref = ddl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ddl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ddl语句，如果是DML Event，为空串
       * </pre>
       *
       * <code>string ddl = 10;</code>
       */
      public Builder setDdl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ddl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ddl语句，如果是DML Event，为空串
       * </pre>
       *
       * <code>string ddl = 10;</code>
       */
      public Builder clearDdl() {
        
        ddl_ = getDefaultInstance().getDdl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ddl语句，如果是DML Event，为空串
       * </pre>
       *
       * <code>string ddl = 10;</code>
       */
      public Builder setDdlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ddl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dtsId_ = "";
      /**
       * <pre>
       * dts任务ID
       * </pre>
       *
       * <code>string dts_id = 11;</code>
       */
      public java.lang.String getDtsId() {
        java.lang.Object ref = dtsId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dtsId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * dts任务ID
       * </pre>
       *
       * <code>string dts_id = 11;</code>
       */
      public com.google.protobuf.ByteString
          getDtsIdBytes() {
        java.lang.Object ref = dtsId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dtsId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * dts任务ID
       * </pre>
       *
       * <code>string dts_id = 11;</code>
       */
      public Builder setDtsId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dtsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * dts任务ID
       * </pre>
       *
       * <code>string dts_id = 11;</code>
       */
      public Builder clearDtsId() {
        
        dtsId_ = getDefaultInstance().getDtsId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * dts任务ID
       * </pre>
       *
       * <code>string dts_id = 11;</code>
       */
      public Builder setDtsIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dtsId_ = value;
        onChanged();
        return this;
      }

      private boolean isEnd_ ;
      /**
       * <pre>
       * 是否是End记录
       * </pre>
       *
       * <code>bool is_end = 12;</code>
       */
      public boolean getIsEnd() {
        return isEnd_;
      }
      /**
       * <pre>
       * 是否是End记录
       * </pre>
       *
       * <code>bool is_end = 12;</code>
       */
      public Builder setIsEnd(boolean value) {
        
        isEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否是End记录
       * </pre>
       *
       * <code>bool is_end = 12;</code>
       */
      public Builder clearIsEnd() {
        
        isEnd_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bce.dts.protobuf.Event)
    }

    // @@protoc_insertion_point(class_scope:com.bce.dts.protobuf.Event)
    private static final com.bce.dts.protobuf.EventOuterClass.Event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bce.dts.protobuf.EventOuterClass.Event();
    }

    public static com.bce.dts.protobuf.EventOuterClass.Event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Event>
        PARSER = new com.google.protobuf.AbstractParser<Event>() {
      public Event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Event> getParserForType() {
      return PARSER;
    }

    public com.bce.dts.protobuf.EventOuterClass.Event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_baidu_river_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_baidu_river_Event_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Event.proto\022\013com.bce.dts.protobuf\032\014Common.proto" +
      "\032\013Field.proto\"\355\002\n\005Event\022\"\n\004type\030\001 \001(\0162\024." +
      "com.bce.dts.protobuf.MsgType\022\022\n\nservice_id\030\002 \001(\t\022" +
      "\017\n\007db_name\030\003 \001(\t\022\020\n\010tbl_name\030\004 \001(\t\0221\n\nre" +
      "cordType\030\005 \001(\0162\035.com.bce.dts.protobuf.Event.Recor" +
      "dType\022\020\n\010position\030\006 \001(\t\022\016\n\006offset\030\007 \001(\t\022" +
      "\021\n\ttimestamp\030\010 \001(\t\022\"\n\006fields\030\t \003(\0132\022.bai" +
      "du.river.Field\022\013\n\003ddl\030\n \001(\t\022\016\n\006dts_id\030\013 " +
      "\001(\t\022\016\n\006is_end\030\014 \001(\010\"P\n\nRecordType\022\n\n\006INS" +
      "ERT\020\000\022\n\n\006DELETE\020\001\022\n\n\006UPDATE\020\002\022\t\n\005BEGIN\020\003" +
      "\022\n\n\006COMMIT\020\004\022\007\n\003DDL\020\005b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.bce.dts.protobuf.Common.getDescriptor(),
          com.bce.dts.protobuf.FieldOuterClass.getDescriptor(),
        }, assigner);
    internal_static_baidu_river_Event_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_baidu_river_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_baidu_river_Event_descriptor,
        new java.lang.String[] { "Type", "ServiceId", "DbName", "TblName", "RecordType", "Position", "Offset", "Timestamp", "Fields", "Ddl", "DtsId", "IsEnd", });
    com.bce.dts.protobuf.Common.getDescriptor();
    com.bce.dts.protobuf.FieldOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

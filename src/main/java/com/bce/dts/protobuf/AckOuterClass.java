// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ack.proto

package com.bce.dts.protobuf;

public final class AckOuterClass {
  private AckOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bce.dts.protobuf.Ack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    com.bce.dts.protobuf.Common.MsgType getType();

    /**
     * <pre>
     * ack类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
     */
    int getAckTypeValue();
    /**
     * <pre>
     * ack类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
     */
    com.bce.dts.protobuf.AckOuterClass.Ack.AckType getAckType();

    /**
     * <code>string dts_id = 3;</code>
     */
    java.lang.String getDtsId();
    /**
     * <code>string dts_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getDtsIdBytes();

    /**
     * <pre>
     * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
     * </pre>
     *
     * <code>string offset = 4;</code>
     */
    java.lang.String getOffset();
    /**
     * <pre>
     * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
     * </pre>
     *
     * <code>string offset = 4;</code>
     */
    com.google.protobuf.ByteString
        getOffsetBytes();

    /**
     * <pre>
     * client消费点在binlog中的位置
     * </pre>
     *
     * <code>string position = 5;</code>
     */
    java.lang.String getPosition();
    /**
     * <pre>
     * client消费点在binlog中的位置
     * </pre>
     *
     * <code>string position = 5;</code>
     */
    com.google.protobuf.ByteString
        getPositionBytes();

    /**
     * <pre>
     * client已消费的时间戳，格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 6;</code>
     */
    java.lang.String getTimestamp();
    /**
     * <pre>
     * client已消费的时间戳，格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 6;</code>
     */
    com.google.protobuf.ByteString
        getTimestampBytes();
  }
  /**
   * Protobuf type {@code com.bce.dts.protobuf.Ack}
   */
  public  static final class Ack extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bce.dts.protobuf.Ack)
      AckOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ack.newBuilder() to construct.
    private Ack(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ack() {
      type_ = 0;
      ackType_ = 0;
      dtsId_ = "";
      offset_ = "";
      position_ = "";
      timestamp_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              ackType_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              dtsId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              offset_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              position_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              timestamp_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bce.dts.protobuf.AckOuterClass.internal_static_baidu_river_Ack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bce.dts.protobuf.AckOuterClass.internal_static_baidu_river_Ack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bce.dts.protobuf.AckOuterClass.Ack.class, com.bce.dts.protobuf.AckOuterClass.Ack.Builder.class);
    }

    /**
     * Protobuf enum {@code com.bce.dts.protobuf.Ack.AckType}
     */
    public enum AckType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * 认证成功
       * </pre>
       *
       * <code>AUTH_OK = 0;</code>
       */
      AUTH_OK(0),
      /**
       * <pre>
       * 认证失败
       * </pre>
       *
       * <code>AUTH_FAIL = 1;</code>
       */
      AUTH_FAIL(1),
      /**
       * <pre>
       * client消费offset
       * </pre>
       *
       * <code>COMMIT_OFFSET = 2;</code>
       */
      COMMIT_OFFSET(2),
      /**
       * <pre>
       * client正常退出
       * </pre>
       *
       * <code>CONN_CLOSE = 3;</code>
       */
      CONN_CLOSE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * 认证成功
       * </pre>
       *
       * <code>AUTH_OK = 0;</code>
       */
      public static final int AUTH_OK_VALUE = 0;
      /**
       * <pre>
       * 认证失败
       * </pre>
       *
       * <code>AUTH_FAIL = 1;</code>
       */
      public static final int AUTH_FAIL_VALUE = 1;
      /**
       * <pre>
       * client消费offset
       * </pre>
       *
       * <code>COMMIT_OFFSET = 2;</code>
       */
      public static final int COMMIT_OFFSET_VALUE = 2;
      /**
       * <pre>
       * client正常退出
       * </pre>
       *
       * <code>CONN_CLOSE = 3;</code>
       */
      public static final int CONN_CLOSE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AckType valueOf(int value) {
        return forNumber(value);
      }

      public static AckType forNumber(int value) {
        switch (value) {
          case 0: return AUTH_OK;
          case 1: return AUTH_FAIL;
          case 2: return COMMIT_OFFSET;
          case 3: return CONN_CLOSE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AckType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AckType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AckType>() {
              public AckType findValueByNumber(int number) {
                return AckType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.bce.dts.protobuf.AckOuterClass.Ack.getDescriptor().getEnumTypes().get(0);
      }

      private static final AckType[] VALUES = values();

      public static AckType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AckType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.bce.dts.protobuf.Ack.AckType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
     */
    public com.bce.dts.protobuf.Common.MsgType getType() {
      com.bce.dts.protobuf.Common.MsgType result = com.bce.dts.protobuf.Common.MsgType.valueOf(type_);
      return result == null ? com.bce.dts.protobuf.Common.MsgType.UNRECOGNIZED : result;
    }

    public static final int ACKTYPE_FIELD_NUMBER = 2;
    private int ackType_;
    /**
     * <pre>
     * ack类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
     */
    public int getAckTypeValue() {
      return ackType_;
    }
    /**
     * <pre>
     * ack类型
     * </pre>
     *
     * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
     */
    public com.bce.dts.protobuf.AckOuterClass.Ack.AckType getAckType() {
      com.bce.dts.protobuf.AckOuterClass.Ack.AckType result = com.bce.dts.protobuf.AckOuterClass.Ack.AckType.valueOf(ackType_);
      return result == null ? com.bce.dts.protobuf.AckOuterClass.Ack.AckType.UNRECOGNIZED : result;
    }

    public static final int DTS_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object dtsId_;
    /**
     * <code>string dts_id = 3;</code>
     */
    public java.lang.String getDtsId() {
      java.lang.Object ref = dtsId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dtsId_ = s;
        return s;
      }
    }
    /**
     * <code>string dts_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDtsIdBytes() {
      java.lang.Object ref = dtsId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dtsId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 4;
    private volatile java.lang.Object offset_;
    /**
     * <pre>
     * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
     * </pre>
     *
     * <code>string offset = 4;</code>
     */
    public java.lang.String getOffset() {
      java.lang.Object ref = offset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        offset_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
     * </pre>
     *
     * <code>string offset = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOffsetBytes() {
      java.lang.Object ref = offset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        offset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSITION_FIELD_NUMBER = 5;
    private volatile java.lang.Object position_;
    /**
     * <pre>
     * client消费点在binlog中的位置
     * </pre>
     *
     * <code>string position = 5;</code>
     */
    public java.lang.String getPosition() {
      java.lang.Object ref = position_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        position_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * client消费点在binlog中的位置
     * </pre>
     *
     * <code>string position = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPositionBytes() {
      java.lang.Object ref = position_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        position_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 6;
    private volatile java.lang.Object timestamp_;
    /**
     * <pre>
     * client已消费的时间戳，格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 6;</code>
     */
    public java.lang.String getTimestamp() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timestamp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * client已消费的时间戳，格式为2017-07-25 17:00:00
     * </pre>
     *
     * <code>string timestamp = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTimestampBytes() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.bce.dts.protobuf.Common.MsgType.UNKNOW.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (ackType_ != com.bce.dts.protobuf.AckOuterClass.Ack.AckType.AUTH_OK.getNumber()) {
        output.writeEnum(2, ackType_);
      }
      if (!getDtsIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dtsId_);
      }
      if (!getOffsetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, offset_);
      }
      if (!getPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, position_);
      }
      if (!getTimestampBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.bce.dts.protobuf.Common.MsgType.UNKNOW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (ackType_ != com.bce.dts.protobuf.AckOuterClass.Ack.AckType.AUTH_OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ackType_);
      }
      if (!getDtsIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dtsId_);
      }
      if (!getOffsetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, offset_);
      }
      if (!getPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, position_);
      }
      if (!getTimestampBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bce.dts.protobuf.AckOuterClass.Ack)) {
        return super.equals(obj);
      }
      com.bce.dts.protobuf.AckOuterClass.Ack other = (com.bce.dts.protobuf.AckOuterClass.Ack) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && ackType_ == other.ackType_;
      result = result && getDtsId()
          .equals(other.getDtsId());
      result = result && getOffset()
          .equals(other.getOffset());
      result = result && getPosition()
          .equals(other.getPosition());
      result = result && getTimestamp()
          .equals(other.getTimestamp());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + ACKTYPE_FIELD_NUMBER;
      hash = (53 * hash) + ackType_;
      hash = (37 * hash) + DTS_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDtsId().hashCode();
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getOffset().hashCode();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bce.dts.protobuf.AckOuterClass.Ack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bce.dts.protobuf.AckOuterClass.Ack prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bce.dts.protobuf.Ack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bce.dts.protobuf.Ack)
        com.bce.dts.protobuf.AckOuterClass.AckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bce.dts.protobuf.AckOuterClass.internal_static_baidu_river_Ack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bce.dts.protobuf.AckOuterClass.internal_static_baidu_river_Ack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bce.dts.protobuf.AckOuterClass.Ack.class, com.bce.dts.protobuf.AckOuterClass.Ack.Builder.class);
      }

      // Construct using com.bce.dts.protobuf.AckOuterClass.Ack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        ackType_ = 0;

        dtsId_ = "";

        offset_ = "";

        position_ = "";

        timestamp_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bce.dts.protobuf.AckOuterClass.internal_static_baidu_river_Ack_descriptor;
      }

      public com.bce.dts.protobuf.AckOuterClass.Ack getDefaultInstanceForType() {
        return com.bce.dts.protobuf.AckOuterClass.Ack.getDefaultInstance();
      }

      public com.bce.dts.protobuf.AckOuterClass.Ack build() {
        com.bce.dts.protobuf.AckOuterClass.Ack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.bce.dts.protobuf.AckOuterClass.Ack buildPartial() {
        com.bce.dts.protobuf.AckOuterClass.Ack result = new com.bce.dts.protobuf.AckOuterClass.Ack(this);
        result.type_ = type_;
        result.ackType_ = ackType_;
        result.dtsId_ = dtsId_;
        result.offset_ = offset_;
        result.position_ = position_;
        result.timestamp_ = timestamp_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bce.dts.protobuf.AckOuterClass.Ack) {
          return mergeFrom((com.bce.dts.protobuf.AckOuterClass.Ack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bce.dts.protobuf.AckOuterClass.Ack other) {
        if (other == com.bce.dts.protobuf.AckOuterClass.Ack.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.ackType_ != 0) {
          setAckTypeValue(other.getAckTypeValue());
        }
        if (!other.getDtsId().isEmpty()) {
          dtsId_ = other.dtsId_;
          onChanged();
        }
        if (!other.getOffset().isEmpty()) {
          offset_ = other.offset_;
          onChanged();
        }
        if (!other.getPosition().isEmpty()) {
          position_ = other.position_;
          onChanged();
        }
        if (!other.getTimestamp().isEmpty()) {
          timestamp_ = other.timestamp_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bce.dts.protobuf.AckOuterClass.Ack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bce.dts.protobuf.AckOuterClass.Ack) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public com.bce.dts.protobuf.Common.MsgType getType() {
        com.bce.dts.protobuf.Common.MsgType result = com.bce.dts.protobuf.Common.MsgType.valueOf(type_);
        return result == null ? com.bce.dts.protobuf.Common.MsgType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public Builder setType(com.bce.dts.protobuf.Common.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.MsgType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int ackType_ = 0;
      /**
       * <pre>
       * ack类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
       */
      public int getAckTypeValue() {
        return ackType_;
      }
      /**
       * <pre>
       * ack类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
       */
      public Builder setAckTypeValue(int value) {
        ackType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ack类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
       */
      public com.bce.dts.protobuf.AckOuterClass.Ack.AckType getAckType() {
        com.bce.dts.protobuf.AckOuterClass.Ack.AckType result = com.bce.dts.protobuf.AckOuterClass.Ack.AckType.valueOf(ackType_);
        return result == null ? com.bce.dts.protobuf.AckOuterClass.Ack.AckType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * ack类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
       */
      public Builder setAckType(com.bce.dts.protobuf.AckOuterClass.Ack.AckType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ackType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ack类型
       * </pre>
       *
       * <code>.com.bce.dts.protobuf.Ack.AckType ackType = 2;</code>
       */
      public Builder clearAckType() {
        
        ackType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dtsId_ = "";
      /**
       * <code>string dts_id = 3;</code>
       */
      public java.lang.String getDtsId() {
        java.lang.Object ref = dtsId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dtsId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string dts_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDtsIdBytes() {
        java.lang.Object ref = dtsId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dtsId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string dts_id = 3;</code>
       */
      public Builder setDtsId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dtsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string dts_id = 3;</code>
       */
      public Builder clearDtsId() {
        
        dtsId_ = getDefaultInstance().getDtsId();
        onChanged();
        return this;
      }
      /**
       * <code>string dts_id = 3;</code>
       */
      public Builder setDtsIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dtsId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object offset_ = "";
      /**
       * <pre>
       * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
       * </pre>
       *
       * <code>string offset = 4;</code>
       */
      public java.lang.String getOffset() {
        java.lang.Object ref = offset_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          offset_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
       * </pre>
       *
       * <code>string offset = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOffsetBytes() {
        java.lang.Object ref = offset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          offset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
       * </pre>
       *
       * <code>string offset = 4;</code>
       */
      public Builder setOffset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
       * </pre>
       *
       * <code>string offset = 4;</code>
       */
      public Builder clearOffset() {
        
        offset_ = getDefaultInstance().getOffset();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * client已消费的kafka offset, 如果是非COMMIT_OFFSET类型的ACK，为空串
       * </pre>
       *
       * <code>string offset = 4;</code>
       */
      public Builder setOffsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        offset_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object position_ = "";
      /**
       * <pre>
       * client消费点在binlog中的位置
       * </pre>
       *
       * <code>string position = 5;</code>
       */
      public java.lang.String getPosition() {
        java.lang.Object ref = position_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          position_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * client消费点在binlog中的位置
       * </pre>
       *
       * <code>string position = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPositionBytes() {
        java.lang.Object ref = position_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          position_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * client消费点在binlog中的位置
       * </pre>
       *
       * <code>string position = 5;</code>
       */
      public Builder setPosition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * client消费点在binlog中的位置
       * </pre>
       *
       * <code>string position = 5;</code>
       */
      public Builder clearPosition() {
        
        position_ = getDefaultInstance().getPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * client消费点在binlog中的位置
       * </pre>
       *
       * <code>string position = 5;</code>
       */
      public Builder setPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        position_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object timestamp_ = "";
      /**
       * <pre>
       * client已消费的时间戳，格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 6;</code>
       */
      public java.lang.String getTimestamp() {
        java.lang.Object ref = timestamp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timestamp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * client已消费的时间戳，格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTimestampBytes() {
        java.lang.Object ref = timestamp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timestamp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * client已消费的时间戳，格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 6;</code>
       */
      public Builder setTimestamp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * client已消费的时间戳，格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 6;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = getDefaultInstance().getTimestamp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * client已消费的时间戳，格式为2017-07-25 17:00:00
       * </pre>
       *
       * <code>string timestamp = 6;</code>
       */
      public Builder setTimestampBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bce.dts.protobuf.Ack)
    }

    // @@protoc_insertion_point(class_scope:com.bce.dts.protobuf.Ack)
    private static final com.bce.dts.protobuf.AckOuterClass.Ack DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bce.dts.protobuf.AckOuterClass.Ack();
    }

    public static com.bce.dts.protobuf.AckOuterClass.Ack getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ack>
        PARSER = new com.google.protobuf.AbstractParser<Ack>() {
      public Ack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ack(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ack> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ack> getParserForType() {
      return PARSER;
    }

    public com.bce.dts.protobuf.AckOuterClass.Ack getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_baidu_river_Ack_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_baidu_river_Ack_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tAck.proto\022\013com.bce.dts.protobuf\032\014Common.proto\"\343" +
      "\001\n\003Ack\022\"\n\004type\030\001 \001(\0162\024.com.bce.dts.protobuf.MsgTy" +
      "pe\022)\n\007ackType\030\002 \001(\0162\030.com.bce.dts.protobuf.Ack.Ac" +
      "kType\022\016\n\006dts_id\030\003 \001(\t\022\016\n\006offset\030\004 \001(\t\022\020\n" +
      "\010position\030\005 \001(\t\022\021\n\ttimestamp\030\006 \001(\t\"H\n\007Ac" +
      "kType\022\013\n\007AUTH_OK\020\000\022\r\n\tAUTH_FAIL\020\001\022\021\n\rCOM" +
      "MIT_OFFSET\020\002\022\016\n\nCONN_CLOSE\020\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.bce.dts.protobuf.Common.getDescriptor(),
        }, assigner);
    internal_static_baidu_river_Ack_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_baidu_river_Ack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_baidu_river_Ack_descriptor,
        new java.lang.String[] { "Type", "AckType", "DtsId", "Offset", "Position", "Timestamp", });
    com.bce.dts.protobuf.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
